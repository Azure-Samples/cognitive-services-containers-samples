apiVersion: v1
kind: Namespace
metadata:
  name: language-https
  labels:
    name: language-https
---
apiVersion: v1
kind: Secret
metadata:
  name: nginx-cert
  namespace: language-https
type: Opaque
data:
  nginx.key: # "<Base64 Encoded key"
  nginx.crt: # "<Base64 Encoded crt>"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: language-https
data:
  tls.conf: |
    server {
      listen              443 ssl;
      ssl_certificate     /cert/nginx.crt;
      ssl_certificate_key /cert/nginx.key;

      # Redirect HTTP requests to HTTPS
      return 301 https://$host$request_uri

      location / {
          proxy_pass http://localhost:5000;
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: language
  namespace: language-https
spec:
  selector:
    app: language
  type: LoadBalancer
  ports:
    - name: language-tls
      port: 443
      targetPort: 443
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: language-https
  namespace: language-https
  labels:
    app: language
spec:
  replicas: 1
  selector:
    matchLabels:
      app: language
  template:
    metadata:
      labels:
        app: language
    spec:
      containers:
        - name: front-end
          image: nginx
          ports:
            - containerPort: 443
          volumeMounts:
            - name: nginx-cert
              readOnly: true
              mountPath: /cert
            - name: nginx-conf
              readOnly: true
              mountPath: /etc/nginx/conf.d/
        - name: language
          image: mcr.microsoft.com/azure-cognitive-services/language
          env:
            - name: eula
              value: # accept
            - name: apikey
              value: # "<apikey>"
            - name: billing
              value: # "<billing>"
          ports:
            - containerPort: 5000
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: tls.conf
                path: tls.conf
        - name: nginx-cert
          secret:
            secretName: nginx-cert
---